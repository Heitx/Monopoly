private void drawBoard() {
		Point2D point;

		for(FieldTemplate field : domain.getFields()) {
			point = field.getGridPosition();

			if(point != null) {
				Label label = new Label(field.getPosition() + "\n" + field.getName());
				label.setPadding(new Insets(1));
				label.setFont(Font.font(12));
				label.setTextAlignment(TextAlignment.CENTER);
				label.setContentDisplay(ContentDisplay.CENTER);

				gridBoard.add(label, (int) point.getX(), (int) point.getY());
			}
		}


	}

	private void addColmnsAndRowsToGrid() {
		FieldTemplate[] fields = domain.getFields();

		// formula:
		// O = C * 2 + R * 2 + 4

		int columns = (int) Math.ceil(fields.length / 4.0);
		int rows = (int) Math.floor(fields.length / 4.0 + 2);

		final double widthPct = gridBoard.getPrefWidth() / (gridBoard.getPrefWidth() / columns);
		final double heightPct = gridBoard.getPrefHeight() / (gridBoard.getPrefHeight() / rows);

		// adds the columns and rows

		for(int i = 0; i < columns; i++) {
			ColumnConstraints col = new ColumnConstraints();
			col.setPercentWidth(widthPct);
			col.setHalignment(HPos.CENTER);

			gridBoard.getColumnConstraints().add(col);
		}

		for(int i = 0; i < rows; i++) {
			RowConstraints row = new RowConstraints();
			row.setPercentHeight(heightPct);
			row.setValignment(VPos.CENTER);

			gridBoard.getRowConstraints().add(row);
		}
	}

	private void assignGridPositionToFields() {
		FieldTemplate[] fields = domain.getFields();

		int columns = (int) Math.ceil(fields.length / 4.0);
		int rows = (int) Math.floor(fields.length / 4.0 + 2);

		// assigning grid position to the fields

		int idSC = 0; // start counter
		int idEC = fields.length - 1; // end counter

		for(int i = 0; i < columns; i++, idSC++) {
			fields[idSC].setGridPosition(new Point2D(i, 0));
		}

		for(int i = 1; i < rows - 1; i++, idSC++, idEC--) {
			fields[idSC].setGridPosition(new Point2D(columns - 1, i));
			fields[idEC].setGridPosition(new Point2D(0, i));
		}

		for(int i = 0; i < columns; i++, idEC--) {
			fields[idEC].setGridPosition(new Point2D(i, rows - 1));
		}
	}